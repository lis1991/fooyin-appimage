name: Build AppImage with AppImageBuilder

on:
  schedule:
    - cron: '0 4 * * 0'  # –ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 04:00 UTC
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üì¶ Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl desktop-file-utils libglib2.0-0

      # --- –î–æ–±–∞–≤–ª—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ ---
      - name: üíæ Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/AppImageBuilder.yml') }} # –ö–ª—é—á –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ñ–∏–≥–∞, –Ω–∞ —Å–ª—É—á–∞–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üíæ Cache appimagetool
        id: cache-appimagetool
        uses: actions/cache@v3
        with:
          path: ~/appimagetool.AppImage
          key: appimagetool-x86_64

      - name: üíæ Cache AppImage runtime
        id: cache-runtime
        uses: actions/cache@v3
        with:
          path: ~/AppImageKit-runtime-x86_64
          key: AppImageKit-runtime-x86_64
      # -----------------------------

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å AppImageBuilder
        run: |
          sudo apt install -y python3-pip
          pip3 install appimage-builder

      # --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ appimagetool, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å ---
      - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π appimagetool (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if: steps.cache-appimagetool.outputs.cache-hit == 'true'
        run: |
          chmod +x ~/appimagetool.AppImage
          # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –∏–ª–∏ –∫–æ–ø–∏—Ä—É–µ–º –≤ PATH, —á—Ç–æ–±—ã AppImageBuilder –º–æ–≥ –µ–≥–æ –Ω–∞–π—Ç–∏
          sudo mv ~/appimagetool.AppImage /usr/local/bin/appimagetool
      # ----------------------------------------------------------

      # --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ runtime, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å ---
      - name: üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π runtime (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if: steps.cache-runtime.outputs.cache-hit == 'true'
        run: |
          mkdir -p ~/.cache/appimage-builder
          cp ~/AppImageKit-runtime-x86_64 ~/.cache/appimage-builder/runtime-x86_64
      # ----------------------------------------------------

      - name: üî® Build AppImage
        run: |
          appimage-builder --recipe AppImageBuilder.yml --skip-test

      # --- –°–æ—Ö—Ä–∞–Ω—è–µ–º appimagetool –≤ –∫—ç—à, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–∫–∞—á–∞–Ω ---
      - name: üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å appimagetool –≤ –∫—ç—à (–µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∫—ç—à–∞)
        if: steps.cache-appimagetool.outputs.cache-hit != 'true'
        run: |
          # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ appimagetool –±—ã–ª —Å–∫–∞—á–∞–Ω –≤ ~/.local/bin –∏–ª–∏ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          # –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –µ–≥–æ –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –∫—ç—à
          # –û–±—ã—á–Ω–æ AppImageBuilder —Å–∫–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ –≤ ~/.cache/appimage-builder/downloads/
          # –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥. –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏.
          # –í–ê–ñ–ù–û: –≠—Ç–æ—Ç –ø—É—Ç—å –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–µ—Ä—Å–∏–∏ AppImageBuilder.
          # –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω –ø—Ä–∏–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏.
          # find ~/.cache/appimage-builder -name "appimagetool-*" -type f -executable 2>/dev/null | head -1 | xargs -I {} cp {} ~/appimagetool.AppImage || echo "appimagetool –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è"
          
          # –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±: —Å–∫–∞—á–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ –∏–∑ –∫—ç—à–∞
          if [ ! -f ~/appimagetool.AppImage ]; then
            echo "appimagetool –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, —Å–∫–∞—á–∏–≤–∞–µ–º –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è..."
            wget -O ~/appimagetool.AppImage "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
            chmod +x ~/appimagetool.AppImage
          fi
          # –ï—Å–ª–∏ –æ–Ω —É–∂–µ –±—ã–ª —Å–∫–∞—á–∞–Ω AppImageBuilder, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–µ–º/—Å–∫–æ–ø–∏—Ä—É–µ–º
          # (–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ç—Ä–∏–≤–∏–∞–ª—å–Ω–æ, —Ç.–∫. –ø—É—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π)
          # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –µ—Å–ª–∏ –º—ã —Å–∞–º–∏ —Å–∫–∞—á–∞–ª–∏, —Ç–æ –æ–Ω —É–∂–µ –≤ –∫—ç—à–µ.
          echo "appimagetool –≥–æ—Ç–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ ~/appimagetool.AppImage"
      # ----------------------------------------------------------

      # --- –°–æ—Ö—Ä–∞–Ω—è–µ–º runtime –≤ –∫—ç—à, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–∫–∞—á–∞–Ω ---
      - name: üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å runtime –≤ –∫—ç—à (–µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∫—ç—à–∞)
        if: steps.cache-runtime.outputs.cache-hit != 'true'
        run: |
          # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, runtime —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è AppImageBuilder.
          # –ù–∞–π–¥–µ–º –µ–≥–æ –≤ –∫—ç—à–µ AppImageBuilder –∏ —Å–∫–æ–ø–∏—Ä—É–µ–º.
          # find ~/.cache/appimage-builder -name "runtime-x86_64" -type f 2>/dev/null | head -1 | xargs -I {} cp {} ~/AppImageKit-runtime-x86_64 || echo "runtime –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è"
          
          # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±: –µ—Å–ª–∏ —Ñ–∞–π–ª –ø–æ—è–≤–∏–ª—Å—è –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏, —Å–∫–æ–ø–∏—Ä—É–µ–º –µ–≥–æ.
          # –≠—Ç–æ –º–µ–Ω–µ–µ –Ω–∞–¥–µ–∂–Ω–æ, –Ω–æ –ø—Ä–æ—â–µ.
          if [ -f ~/.cache/appimage-builder/runtime-x86_64 ]; then
             cp ~/.cache/appimage-builder/runtime-x86_64 ~/AppImageKit-runtime-x86_64
             echo "runtime –Ω–∞–π–¥–µ–Ω –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è."
          else
             echo "runtime –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ~/.cache/appimage-builder/ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è."
          fi
      # ---------------------------------------------------

      # --- –û—Ç–ª–∞–¥–∫–∞: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã ---
      - name: üêû Debug - List files after build
        run: |
          echo "üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏:"
          ls -la
          echo "üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ .AppImage:"
          find . -name "*.AppImage" -type f 2>/dev/null || echo "  –§–∞–π–ª—ã .AppImage –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
          echo "üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ~/.cache/appimage-builder (–µ—Å–ª–∏ –µ—Å—Ç—å):"
          ls -la ~/.cache/appimage-builder/ 2>/dev/null || echo "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ~/.cache/appimage-builder –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
      # ------------------------------------------

      - name: üì§ Upload AppImage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DoubleCommander-AppImage
          path: |
            *.AppImage
            #*doublecmd*.AppImage
            #DoubleCommander*.AppImage

      - name: üè∑Ô∏è Extract Version (Optional)
        id: get_version
        run: |
          FILE=$(find . -name "*.AppImage" -type f 2>/dev/null | head -1)
          if [ -z "$FILE" ]; then
            FILE=$(find . -name "*.AppImage" -type f 2>/dev/null | head -1)
          fi
          if [ -z "$FILE" ]; then
             echo "‚ùå AppImage —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏!"
             echo "üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
             ls -la
             echo "::error::AppImage —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
             exit 1
          fi
          
          echo "‚úÖ –ù–∞–π–¥–µ–Ω AppImage —Ñ–∞–π–ª: $FILE"
          echo "appimage_file=$FILE" >> $GITHUB_OUTPUT

          VERSION=$(date +"%Y%m%d%H%M%S")
          echo "üîñ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è (–¥–∞—Ç–∞/–≤—Ä–µ–º—è): $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT


      - name: üöÄ Create GitHub Release (Optional)
        #if: success() && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.get_version.outputs.appimage_file }}
          tag_name: v${{ steps.get_version.outputs.version }}
          body: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ AppImage —á–µ—Ä–µ–∑ AppImageBuilder"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
