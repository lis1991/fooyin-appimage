name: Build AppImage from .deb (Universal)

on:
  schedule:
    - cron: '0 4 * * 0'  # –ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 04:00 UTC
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üì¶ Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl jq python3-pip desktop-file-utils

      - name: üì¶ Install AppImageBuilder (v1)
        run: |
          pip3 install --user appimage-builder==1.*

      - name: üî® Build AppImage (Auto-download .deb via script in AppImageBuilder.yml)
        run: |
          appimage-builder --recipe AppImageBuilder.yml --skip-test

      - name: üêû Debug - List files after build
        run: |
          echo "üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏:"
          ls -la
          echo "üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ .AppImage:"
          find . -name "*.AppImage" -type f 2>/dev/null || echo "  –§–∞–π–ª—ã .AppImage –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

      - name: üì§ Upload AppImage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AppImage
          path: '*.AppImage'

      - name: üè∑Ô∏è Extract Version (Optional)
        id: get_version
        run: |
          FILE=$(find . -name "*.AppImage" -type f 2>/dev/null | head -1)
          if [ -z "$FILE" ]; then
            echo "::error::AppImage —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏!"
            echo "üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
            ls -la
            exit 1
          fi
          echo "‚úÖ –ù–∞–π–¥–µ–Ω AppImage —Ñ–∞–π–ª: $FILE"
          echo "appimage_file=$FILE" >> $GITHUB_OUTPUT
          VERSION=$(date +"%Y%m%d%H%M%S")
          echo "üîñ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è (–¥–∞—Ç–∞/–≤—Ä–µ–º—è): $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: üöÄ Create GitHub Release (Optional)
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.get_version.outputs.appimage_file }}
          tag_name: v${{ steps.get_version.outputs.version }}
          body: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ AppImage –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ .deb-—Ä–µ–ª–∏–∑–∞ —á–µ—Ä–µ–∑ AppImageBuilder"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
